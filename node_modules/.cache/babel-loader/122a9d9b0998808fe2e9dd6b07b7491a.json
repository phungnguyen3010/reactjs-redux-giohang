{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Cart from './../components/Cart';\nimport CartItem from \"./../components/CartItem\";\nimport CartResult from \"./../components/CartResult\";\nimport * as Message from \"./../constants/Message\";\nimport * as Actions from \"./../actions/index\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var {\n        onDeleteProductInCart,\n        onChangeMessage\n      } = this.props;\n      var result = /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      }, \" \", Message.MSG_CART_EMPTY, \" \"));\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {\n          return /*#__PURE__*/React.createElement(CartItem, {\n            key: index,\n            item: item,\n            index: index,\n            onDeleteProductInCart: onDeleteProductInCart,\n            onChangeMessage: onChangeMessage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 11\n            }\n          });\n        });\n      }\n\n      return result;\n    };\n\n    this.showCartResult = cart => {\n      var result = null;\n\n      if (cart.length > 0) {\n        return /*#__PURE__*/React.createElement(CartResult, {\n          cart: cart,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    var {\n      cart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, this.showCartItem(cart), this.showCartResult(cart));\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }),\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onDeleteProductInCart: product => {\n      dispatch(Actions.actDeleteProduct(product));\n    },\n    onChangeMessage: message => {\n      dispatch(Actions.actChangeMessage(message));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);","map":{"version":3,"sources":["/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/CartContainer.js"],"names":["React","Component","PropTypes","connect","Cart","CartItem","CartResult","Message","Actions","CartContainer","showCartItem","cart","onDeleteProductInCart","onChangeMessage","props","result","MSG_CART_EMPTY","length","map","item","index","showCartResult","render","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","price","inventory","rating","quantity","mapStateToProps","state","mapDispatchToProps","dispatch","actDeleteProduct","message","actChangeMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Cart from './../components/Cart';\nimport CartItem from \"./../components/CartItem\";\nimport CartResult from \"./../components/CartResult\";\nimport * as Message from \"./../constants/Message\";\nimport * as Actions from \"./../actions/index\"\n\nclass CartContainer extends Component {\n  render() {\n    var {cart} = this.props;\n    return (\n      <Cart>\n        { this.showCartItem(cart) }\n        {this.showCartResult(cart)}\n      </Cart>\n    );\n  }\n\n  showCartItem = (cart) =>{\n  var {onDeleteProductInCart, onChangeMessage} = this.props;\n  var result = <tr>\n    <td> { Message.MSG_CART_EMPTY } </td>\n    </tr>;\n    if(cart.length > 0){\n      result = cart.map((item,index) =>{\n        return(\n          <CartItem \n            key = {index}\n            item = {item}\n            index = {index}\n            onDeleteProductInCart={onDeleteProductInCart}\n            onChangeMessage = {onChangeMessage}\n\n          />\n        );\n      });\n    }\n    return result;\n  }\n\n  showCartResult = (cart) =>{\n    var result = null;\n    if(cart.length > 0){\n      return <CartResult cart={cart}\n      />\n    }\n    return result;\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        inventory: PropTypes.number.isRequired,\n        rating: PropTypes.number.isRequired\n      }),\n      quantity: PropTypes.number.isRequired\n    })\n  ).isRequired\n}\n\nconst mapStateToProps = state => {\n  return (\n    {\n      cart: state.cart\n    }\n  );\n}\n\nconst mapDispatchToProps = (dispatch, props) =>{\n  return{\n    onDeleteProductInCart: (product) =>{\n        dispatch(Actions.actDeleteProduct(product))\n    },\n    onChangeMessage : (message) =>{\n      dispatch(Actions.actChangeMessage(message));\n    }\n  }\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}