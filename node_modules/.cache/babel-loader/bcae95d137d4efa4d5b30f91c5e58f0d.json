{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/ProductContainer.js\";\nimport React, { Component } from 'react';\nimport Products from \"./../components/Products\";\nimport Product from \"./../components/Product\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport * as Actions from \"./../actions/index\";\n\nclass ProductContainer extends Component {\n  render() {\n    var {\n      products\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Products, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, this.showProduct(products));\n  }\n\n  showProduct(products) {\n    var result = '';\n\n    if (products.length) {\n      result = products.map((product, index) => {\n        return /*#__PURE__*/React.createElement(Product, {\n          key: index,\n          product: product,\n          onAddToCart: this.props.onAddToCart(product),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 16\n          }\n        });\n      });\n    }\n\n    return result;\n  }\n\n}\n\nProductContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onAddToCart: product => {\n      dispatch(Actions.onAddToCart(product, 1));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);","map":{"version":3,"sources":["/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/ProductContainer.js"],"names":["React","Component","Products","Product","PropTypes","connect","Actions","ProductContainer","render","products","props","showProduct","result","length","map","product","index","onAddToCart","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","price","inventory","rating","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,oBAAzB;;AAGA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACvCO,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAAxB;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiBF,QAAjB,CADH,CADF;AAKD;;AAEDE,EAAAA,WAAW,CAACF,QAAD,EAAW;AACpB,QAAIG,MAAM,GAAG,EAAb;;AACA,QAAIH,QAAQ,CAACI,MAAb,EAAqB;AACnBD,MAAAA,MAAM,GAAGH,QAAQ,CAACK,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACxC,4BAAO,oBAAC,OAAD;AACL,UAAA,GAAG,EAAEA,KADA;AAEL,UAAA,OAAO,EAAED,OAFJ;AAGL,UAAA,WAAW,EAAE,KAAKL,KAAL,CAAWO,WAAX,CAAuBF,OAAvB,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANQ,CAAT;AAOD;;AACD,WAAOH,MAAP;AACD;;AAtBsC;;AAyBzCL,gBAAgB,CAACW,SAAjB,GAA6B;AAC3BT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,OAAV,CACRf,SAAS,CAACgB,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEjB,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAEdC,IAAAA,IAAI,EAAEpB,SAAS,CAACqB,MAAV,CAAiBF,UAFT;AAGdG,IAAAA,KAAK,EAAEtB,SAAS,CAACqB,MAAV,CAAiBF,UAHV;AAIdI,IAAAA,KAAK,EAAEvB,SAAS,CAACkB,MAAV,CAAiBC,UAJV;AAKdK,IAAAA,SAAS,EAAExB,SAAS,CAACkB,MAAV,CAAiBC,UALd;AAMdM,IAAAA,MAAM,EAAEzB,SAAS,CAACkB,MAAV,CAAiBC;AANX,GAAhB,CADQ,EASRA;AAVyB,CAA7B;;AAaA,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SACE;AACEtB,IAAAA,QAAQ,EAAEsB,KAAK,CAACtB;AADlB,GADF;AAKD,CAND;;AAOA,MAAMuB,kBAAkB,GAAG,CAACC,QAAD,EAAWvB,KAAX,KAAoB;AAC7C,SAAM;AACJO,IAAAA,WAAW,EAAGF,OAAD,IAAY;AACvBkB,MAAAA,QAAQ,CAAC3B,OAAO,CAACW,WAAR,CAAoBF,OAApB,EAA6B,CAA7B,CAAD,CAAR;AACD;AAHG,GAAN;AAKD,CAND;;AAQA,eAAeV,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Products from \"./../components/Products\";\nimport Product from \"./../components/Product\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport * as Actions from \"./../actions/index\";\n\n\nclass ProductContainer extends Component {\n  render() {\n    var { products } = this.props;\n    return (\n      <Products>\n        {this.showProduct(products)}\n      </Products>\n    );\n  }\n\n  showProduct(products) {\n    var result = '';\n    if (products.length) {\n      result = products.map((product, index) => {\n        return <Product\n          key={index}\n          product={product}\n          onAddToCart={this.props.onAddToCart(product)}\n        />;\n      })\n    }\n    return result;\n  }\n}\n\nProductContainer.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    })\n  ).isRequired\n}\n\nconst mapStateToProps = state => {\n  return (\n    {\n      products: state.products\n    }\n  );\n}\nconst mapDispatchToProps = (dispatch, props) =>{\n  return{\n    onAddToCart: (product) =>{\n      dispatch(Actions.onAddToCart(product, 1))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductContainer);\n"]},"metadata":{},"sourceType":"module"}