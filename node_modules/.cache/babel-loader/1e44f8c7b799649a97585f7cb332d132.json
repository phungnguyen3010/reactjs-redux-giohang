{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/ProductContainer.js\";\nimport React, { Component } from 'react';\nimport Products from \"./../components/Products\";\nimport Product from \"./../components/Product\";\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\n\nclass ProductContainer extends Component {\n  render() {\n    var {\n      products\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Products, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, this.showProduct(products));\n  }\n\n  showProduct(products) {\n    var result = '';\n\n    if (products.length) {\n      result = products.map((product, index) => {\n        return /*#__PURE__*/React.createElement(Product, {\n          key: index,\n          product: product,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 16\n          }\n        });\n      });\n    }\n\n    return result;\n  }\n\n}\n\nProductContainer.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired,\n    inventory: PropTypes.number.isRequired,\n    rating: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    products: state.products\n  };\n};\n\nexport default connect(mapStateToProps, null)(ProductContainer);","map":{"version":3,"sources":["/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/ProductContainer.js"],"names":["React","Component","Products","Product","PropTypes","connect","ProductContainer","render","products","props","showProduct","result","length","map","product","index","propTypes","arrayOf","shape","id","number","isRequired","name","string","image","price","inventory","rating","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,gBAAN,SAA+BL,SAA/B,CAAyC;AACvCM,EAAAA,MAAM,GAAG;AACP,QAAI;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAtB;AACA,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKC,WAAL,CAAiBF,QAAjB,CADJ,CADF;AAKD;;AAEDE,EAAAA,WAAW,CAACF,QAAD,EAAU;AACnB,QAAIG,MAAM,GAAG,EAAb;;AACA,QAAGH,QAAQ,CAACI,MAAZ,EAAmB;AACjBD,MAAAA,MAAM,GAAGH,QAAQ,CAACK,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAmB;AACvC,4BAAO,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,KAAd;AAAqB,UAAA,OAAO,EAAED,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFQ,CAAT;AAGD;;AACD,WAAOH,MAAP;AACD;;AAlBsC;;AAqBzCL,gBAAgB,CAACU,SAAjB,GAA6B;AAC3BR,EAAAA,QAAQ,EAAEJ,SAAS,CAACa,OAAV,CACRb,SAAS,CAACc,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADP;AAEdC,IAAAA,IAAI,EAAElB,SAAS,CAACmB,MAAV,CAAiBF,UAFT;AAGdG,IAAAA,KAAK,EAAEpB,SAAS,CAACmB,MAAV,CAAiBF,UAHV;AAIdI,IAAAA,KAAK,EAAErB,SAAS,CAACgB,MAAV,CAAiBC,UAJV;AAKdK,IAAAA,SAAS,EAAEtB,SAAS,CAACgB,MAAV,CAAiBC,UALd;AAMdM,IAAAA,MAAM,EAAEvB,SAAS,CAACgB,MAAV,CAAiBC;AANX,GAAhB,CADQ,EASRA;AAVyB,CAA7B;;AAaA,MAAMO,eAAe,GAAGC,KAAK,IAAG;AAC9B,SACE;AACErB,IAAAA,QAAQ,EAAEqB,KAAK,CAACrB;AADlB,GADF;AAKD,CAND;;AAQA,eAAgBH,OAAO,CAACuB,eAAD,EAAiB,IAAjB,CAAP,CAA8BtB,gBAA9B,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Products from \"./../components/Products\";\nimport Product from \"./../components/Product\";\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\n\nclass ProductContainer extends Component {\n  render() {\n    var {products} = this.props;\n    return (\n      <Products>\n        { this.showProduct(products) }\n      </Products>\n    );\n  }\n\n  showProduct(products){\n    var result = '';\n    if(products.length){\n      result = products.map((product, index) =>{\n        return <Product key={index} product={product}/>;\n      })\n    }\n    return result;\n  }\n}\n\nProductContainer.propTypes = {\n  products: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    })\n  ).isRequired\n}\n\nconst mapStateToProps = state =>{\n  return(\n    {\n      products: state.products\n    }\n  );\n}\n\nexport default  connect(mapStateToProps,null)(ProductContainer);\n"]},"metadata":{},"sourceType":"module"}