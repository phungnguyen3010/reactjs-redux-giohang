{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/CartContainer.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Cart from './../components/Cart';\nimport CartItem from \"./../components/CartItem\";\nimport * as Message from \"./../constants/Message\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      var result = Message.MSG_CART_EMPTY;\n\n      if (cart.length > 0) {}\n    };\n  }\n\n  render() {\n    var {\n      cart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, this.showCartItem(cart));\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      rating: PropTypes.number.isRequired\n    }),\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, null)(CartContainer);","map":{"version":3,"sources":["/Users/macbook/My/reactjs/lestion14-cart-template-react/src/containers/CartContainer.js"],"names":["React","Component","PropTypes","connect","Cart","CartItem","Message","CartContainer","showCartItem","cart","result","MSG_CART_EMPTY","length","render","props","propTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","price","inventory","rating","quantity","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAUpCO,YAVoC,GAUpBC,IAAD,IAAS;AACtB,UAAIC,MAAM,GAAGJ,OAAO,CAACK,cAArB;;AACA,UAAGF,IAAI,CAACG,MAAL,GAAc,CAAjB,EAAmB,CAElB;AACF,KAfmC;AAAA;;AACpCC,EAAAA,MAAM,GAAG;AACP,QAAI;AAACJ,MAAAA;AAAD,QAAS,KAAKK,KAAlB;AACA,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKN,YAAL,CAAkBC,IAAlB,CADJ,CADF;AAKD;;AARmC;;AAmBtCF,aAAa,CAACQ,SAAd,GAA0B;AACxBN,EAAAA,IAAI,EAAEP,SAAS,CAACc,OAAV,CACJd,SAAS,CAACe,KAAV,CAAgB;AACdC,IAAAA,OAAO,EAAEhB,SAAS,CAACe,KAAV,CAAgB;AACvBE,MAAAA,EAAE,EAAEjB,SAAS,CAACkB,MAAV,CAAiBC,UADE;AAEvBC,MAAAA,IAAI,EAAEpB,SAAS,CAACqB,MAAV,CAAiBF,UAFA;AAGvBG,MAAAA,KAAK,EAAEtB,SAAS,CAACqB,MAAV,CAAiBF,UAHD;AAIvBI,MAAAA,KAAK,EAAEvB,SAAS,CAACkB,MAAV,CAAiBC,UAJD;AAKvBK,MAAAA,SAAS,EAAExB,SAAS,CAACkB,MAAV,CAAiBC,UALL;AAMvBM,MAAAA,MAAM,EAAEzB,SAAS,CAACkB,MAAV,CAAiBC;AANF,KAAhB,CADK;AASdO,IAAAA,QAAQ,EAAE1B,SAAS,CAACkB,MAAV,CAAiBC;AATb,GAAhB,CADI,EAYJA;AAbsB,CAA1B;;AAgBA,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,SACE;AACErB,IAAAA,IAAI,EAAEqB,KAAK,CAACrB;AADd,GADF;AAKD,CAND;;AAQA,eAAeN,OAAO,CAAC0B,eAAD,EAAkB,IAAlB,CAAP,CAA+BtB,aAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from \"react-redux\";\nimport Cart from './../components/Cart';\nimport CartItem from \"./../components/CartItem\";\nimport * as Message from \"./../constants/Message\";\n\nclass CartContainer extends Component {\n  render() {\n    var {cart} = this.props;\n    return (\n      <Cart>\n        { this.showCartItem(cart) }\n      </Cart>\n    );\n  }\n\n  showCartItem = (cart) =>{\n    var result = Message.MSG_CART_EMPTY;\n    if(cart.length > 0){\n      \n    }\n  }\n\n}\n\nCartContainer.propTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        inventory: PropTypes.number.isRequired,\n        rating: PropTypes.number.isRequired\n      }),\n      quantity: PropTypes.number.isRequired\n    })\n  ).isRequired\n}\n\nconst mapStateToProps = state => {\n  return (\n    {\n      cart: state.cart\n    }\n  );\n}\n\nexport default connect(mapStateToProps, null)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}