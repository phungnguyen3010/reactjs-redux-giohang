{"ast":null,"code":"import * as types from \"./../constants/ActionsType\";\nvar data = JSON.parse(localStorage.getItem(\"Cart\"));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var {\n    product,\n    quantity\n  } = action;\n\n  switch (action.type) {\n    case types.ADD_TO_CART:\n      var index = -1;\n      index = findProduct(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product,\n          quantity\n        });\n      }\n\n      localStorage.setItem(\"Cart\", JSON.stringify(state));\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nvar findProduct = (cart, product) => {\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/macbook/My/reactjs/lestion14-cart-template-react/src/reducers/cart.js"],"names":["types","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","type","ADD_TO_CART","index","findProduct","push","setItem","stringify","length","i","id"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AAEA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,MAAMM,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC3C,MAAI;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAsBF,MAA1B;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAKZ,KAAK,CAACa,WAAX;AACI,UAAIC,KAAK,GAAG,CAAC,CAAb;AACAA,MAAAA,KAAK,GAAGC,WAAW,CAACP,KAAD,EAAQE,OAAR,CAAnB;;AACA,UAAGI,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZN,QAAAA,KAAK,CAACM,KAAD,CAAL,CAAaH,QAAb,IAAyBA,QAAzB;AACH,OAFD,MAEK;AACDH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACPN,UAAAA,OADO;AAEPC,UAAAA;AAFO,SAAX;AAIH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AACJ;AAAS,aAAO,CAAC,GAAGA,KAAJ,CAAP;AAdb;AAgBH,CAlBD;;AAoBA,IAAIO,WAAW,GAAG,CAACR,IAAD,EAAOG,OAAP,KAAkB;AAChC,MAAII,KAAK,GAAG,CAAC,CAAb;;AACA,MAAGP,IAAI,CAACY,MAAL,GAAc,CAAjB,EAAmB;AACf,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEb,IAAI,CAACY,MAArB,EAA6BC,CAAC,EAA9B,EAAiC;AAC7B,UAAGb,IAAI,CAACa,CAAD,CAAJ,CAAQV,OAAR,CAAgBW,EAAhB,KAAuBX,OAAO,CAACW,EAAlC,EAAqC;AACjCP,QAAAA,KAAK,GAAGM,CAAR;AACA;AACH;AACJ;AACJ;;AACD,SAAON,KAAP;AACH,CAXD;;AAaA,eAAeP,IAAf","sourcesContent":["import * as types from \"./../constants/ActionsType\"\n\nvar data = JSON.parse(localStorage.getItem(\"Cart\"));\n\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n    var {product, quantity} = action;\n    switch (action.type) {\n        case types.ADD_TO_CART:\n            var index = -1;\n            index = findProduct(state, product);\n            if(index !== -1){\n                state[index].quantity += quantity;\n            }else{\n                state.push({\n                    product,\n                    quantity\n                });\n            }\n            localStorage.setItem(\"Cart\", JSON.stringify(state));\n            return [...state];\n        default: return [...state];\n    }\n}\n\nvar findProduct = (cart, product) =>{\n    var index = -1;\n    if(cart.length > 0){\n        for(var i=0; i< cart.length; i++){\n            if(cart[i].product.id === product.id){\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n\nexport default cart;"]},"metadata":{},"sourceType":"module"}