{"ast":null,"code":"import * as Types from \"./../constants/ActionsType\";\nvar data = JSON.parse(localStorage.getItem(\"Cart\"));\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n  var {\n    product,\n    quantity\n  } = action;\n  var index = -1; // -1 ko tim thay, !-1 tim thay\n\n  switch (action.type) {\n    case Types.ADD_TO_CART:\n      index = findProduct(state, product);\n\n      if (index !== -1) {\n        state[index].quantity += quantity;\n      } else {\n        state.push({\n          product,\n          quantity\n        });\n      }\n\n      localStorage.setItem(\"Cart\", JSON.stringify(state));\n      return [...state];\n\n    case Types.DELETE_PRODUCT_IN_CART:\n      index = findProduct(state, product);\n\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n\n      localStorage.setItem(\"Cart\", JSON.stringify(state));\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nvar findProduct = (cart, product) => {\n  var index = -1;\n\n  if (cart.length > 0) {\n    for (var i = 0; i < cart.length; i++) {\n      if (cart[i].product.id === product.id) {\n        index = i;\n        break;\n      }\n    }\n  }\n\n  return index;\n};\n\nexport default cart;","map":{"version":3,"sources":["/Users/macbook/My/reactjs/lestion14-cart-template-react/src/reducers/cart.js"],"names":["Types","data","JSON","parse","localStorage","getItem","initialState","cart","state","action","product","quantity","index","type","ADD_TO_CART","findProduct","push","setItem","stringify","DELETE_PRODUCT_IN_CART","splice","length","i","id"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AAEA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAX;AAEA,IAAIC,YAAY,GAAGL,IAAI,GAAGA,IAAH,GAAU,EAAjC;;AAEA,MAAMM,IAAI,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC3C,MAAI;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAsBF,MAA1B;AACA,MAAIG,KAAK,GAAG,CAAC,CAAb,CAF2C,CAE3B;;AAChB,UAAQH,MAAM,CAACI,IAAf;AACI,SAAKb,KAAK,CAACc,WAAX;AACIF,MAAAA,KAAK,GAAGG,WAAW,CAACP,KAAD,EAAQE,OAAR,CAAnB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZJ,QAAAA,KAAK,CAACI,KAAD,CAAL,CAAaD,QAAb,IAAyBA,QAAzB;AACH,OAFD,MAEK;AACDH,QAAAA,KAAK,CAACQ,IAAN,CAAW;AACPN,UAAAA,OADO;AAEPC,UAAAA;AAFO,SAAX;AAIH;;AACDP,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AAEJ,SAAKR,KAAK,CAACmB,sBAAX;AACIP,MAAAA,KAAK,GAAGG,WAAW,CAACP,KAAD,EAAQE,OAAR,CAAnB;;AACA,UAAGE,KAAK,KAAK,CAAC,CAAd,EAAgB;AACZJ,QAAAA,KAAK,CAACY,MAAN,CAAaR,KAAb,EAAoB,CAApB;AACH;;AACDR,MAAAA,YAAY,CAACa,OAAb,CAAqB,MAArB,EAA6Bf,IAAI,CAACgB,SAAL,CAAeV,KAAf,CAA7B;AACA,aAAO,CAAC,GAAGA,KAAJ,CAAP;;AAEJ;AAAS,aAAO,CAAC,GAAGA,KAAJ,CAAP;AAtBb;AAwBH,CA3BD;;AA6BA,IAAIO,WAAW,GAAG,CAACR,IAAD,EAAOG,OAAP,KAAkB;AAChC,MAAIE,KAAK,GAAG,CAAC,CAAb;;AACA,MAAGL,IAAI,CAACc,MAAL,GAAc,CAAjB,EAAmB;AACf,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEf,IAAI,CAACc,MAArB,EAA6BC,CAAC,EAA9B,EAAiC;AAC7B,UAAGf,IAAI,CAACe,CAAD,CAAJ,CAAQZ,OAAR,CAAgBa,EAAhB,KAAuBb,OAAO,CAACa,EAAlC,EAAqC;AACjCX,QAAAA,KAAK,GAAGU,CAAR;AACA;AACH;AACJ;AACJ;;AACD,SAAOV,KAAP;AACH,CAXD;;AAaA,eAAeL,IAAf","sourcesContent":["import * as Types from \"./../constants/ActionsType\"\n\nvar data = JSON.parse(localStorage.getItem(\"Cart\"));\n\nvar initialState = data ? data : [];\n\nconst cart = (state = initialState, action) => {\n    var {product, quantity} = action;\n    var index = -1; // -1 ko tim thay, !-1 tim thay\n    switch (action.type) {\n        case Types.ADD_TO_CART:\n            index = findProduct(state, product);\n            if(index !== -1){\n                state[index].quantity += quantity;\n            }else{\n                state.push({\n                    product,\n                    quantity\n                });\n            }\n            localStorage.setItem(\"Cart\", JSON.stringify(state));\n            return [...state];\n\n        case Types.DELETE_PRODUCT_IN_CART:\n            index = findProduct(state, product);\n            if(index !== -1){\n                state.splice(index, 1);\n            }\n            localStorage.setItem(\"Cart\", JSON.stringify(state));\n            return [...state];\n\n        default: return [...state];\n    }\n}\n\nvar findProduct = (cart, product) =>{\n    var index = -1;\n    if(cart.length > 0){\n        for(var i=0; i< cart.length; i++){\n            if(cart[i].product.id === product.id){\n                index = i;\n                break;\n            }\n        }\n    }\n    return index;\n}\n\nexport default cart;"]},"metadata":{},"sourceType":"module"}